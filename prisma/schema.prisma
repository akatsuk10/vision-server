generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(uuid())
  name               String?
  email              String   @unique
  password           String?  // Nullable since user sets it after verification
  avatar             String?  // Optional profile image
  isEmailVerified    Boolean  @default(false)
  verificationToken  String?  @unique
  createdAt          DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  products           Product[]
  votes              Vote[]
  comments           Comment[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  image       String
  link        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  userId      String
  user        User     @relation(fields: [userId], references: [id])
  votes       Vote[]
  comments    Comment[]
}

model Vote {
  id        String   @id @default(uuid())
  userId    String
  productId String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId]) // Prevent duplicate votes
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  userId    String
  productId String

  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
